//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    help = false
    version = false
    fastq = null
    bam = null
    read_quality = 9
    out_dir = "output"
    restriction_site = "GATATC"
    min_length = 100
    sample = null
    mapq = 4
    telomere_extension = 4000
    beyond_cut = 300
    sample_sheet = null
    telomere_margin = 2000
    aws_image_prefix = null
    aws_queue = null
    disable_ping = false
    analyse_unclassified = false
    monochrome_logs = false
    validate_params = true
    show_hidden_params = false
    store_dir = null

    // alignment
    skip_mapping = false
    reference = null
    alignment_threads = 8


    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf'

    wf {
        fastcat_stats = true
        bamstats = true
        keep_unaligned = false
        example_cmd = [
            "--bam 'wf-teloseq-demo/teloseq_example'",
            "--reference 'wf-teloseq-demo/HG002qpMP_reference.fasta.gz'",
        ]

        common_sha = "sha9ef2f4e4585c4ce6a604616e77185077551abf50"
        container_sha = "sha6aaa642bd59738443c5ade2686bab789f9fafe2d"
        agent = null
        epi2me_instance = null
        epi2me_user = null
    }
}

manifest {
    name = 'epi2me-labs/wf-teloseq'
    author = 'Oxford Nanopore Technologies'
    homePage = 'https://github.com/epi2me-labs/wf-teloseq'
    description = "A workflow to analyse telomere-enriched data generated using Oxford Nanopore's Telo-Seq method."
    mainScript = 'main.nf'
    nextflowVersion = '>=23.04.2'
    version = '0.0.3'
}


// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    withLabel: wf_teloseq {
        container = "ontresearch/wf-teloseq:${params.wf.container_sha}"
    }
    withLabel: wf_common {
        container = "ontresearch/wf-common:${params.wf.common_sha}"
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
}


profiles {
    // the "standard" profile is used implicitly by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }

    // keep stub conda profile to prevent unknown profile warning so users get a better error
    conda {
        conda.enabled = true
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel: wf_common {
                container = "${params.aws_image_prefix}-wf-common:${params.wf.common_sha}"
            }
            withLabel: wf_teloseq {
                container = "${params.aws_image_prefix}-wf-teloseq:${params.wf.container_sha}"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}


timeline {
    enabled = true
    overwrite = true
    file = "${params.out_dir}/execution/timeline.html"
}
report {
    enabled = true
    overwrite = true
    file = "${params.out_dir}/execution/report.html"
}
trace {
    enabled = true
    overwrite = true
    file = "${params.out_dir}/execution/trace.txt"
}

env {
    PYTHONNOUSERSITE = 1
    JAVA_TOOL_OPTIONS = "-Xlog:disable -Xlog:all=warning:stderr"
}
